Checklist and dev notes :)

[] Make sure writing in intro is elaborated on 
[] List methods and basic function

[] make sure exceptions are good

[] Algorithms under exceptions are made by gpt so make sure they are good and figure out if they are actually needed or if they can be implemented in method
    [] Figure out what 'Iterator' is cuz idk

[] complete method logic
    [] probably going to have to create an output variable to print the output to.
        - Same thing I did as the last project, its pretty simple, but just going through the code and making adjustments will take time
    [] M variable ~ Check with prof/TAs to see what the proper M is for values and children
    [] Insert Method ~ look at instructions to see if repeated values are allowed or not (insert method)
    [] split_node Method ~ I have it splitting into a left and right node at the moment, but I'm not sure if thats right, 
        - Idea: splitting into left and right may not be applicable for all sizes of M, but I'm not 100% sure
            * look through instructions for clarifications, but probably ask prof. or TAs
        - Also check if each node always must have M-1 values, or if it can act like a 2,3 tree where it can go 1 value 2 nodes, or 2 values 3 nodes
    [] Build Tree Method ~ Write description for this method
        - Most complex method so make sure to really be sure everything is right
    [] Find Method ~ fix output statements
    [] Print Final List Method ~ Find out if I actually need to keep it or not
    
    [] elaboration as im working through this

[] Match text to given output files
[] Ensure main method matches the one provided
[] Make sure all rules are followed
[] Parts 2 and 3

[] Change output to single statement instead of cout statements


11/12/2024 5:50
 - I just did the first quick comparison with the actual test case and it seems pretty good, I still need to go through and
   check everything off on the To-Do list, but so far it seems pretty good
 - An issue I'm having is I have to start and stop the running for it to actually do the whole thing, I have no clue why, but it still working
   for whatever reason. I assume its a compiler issue cuz its still works (i think), but there really isn't a way to be sure. I'll do that at some point
 - Still need to change the output so it spits it all out at the end, I don't know if thats an issue with not doing redirect input or its just
   the right way, but I need to do it regardless
 - What I'm realizing is this is just a sorting method for a list, so the output being the same doesn't really mean anything, but then again 
   most of the program is just rearranging the list, so theres no real tell tale way to know if im doing this correctly.
 - I can go more in depth on the outputs to see if there is a difference, and try to relate the stuff to the M-tree structure, but its lack of
   solid definition also makes it difficult to properly know how to do stuff. 